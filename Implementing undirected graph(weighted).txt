Implementing undirected graph(weighted)

def addNode(v):
    global n
    if v in nodes:
        print(v,"is already existed")
    else:
        nodes.append(v)
        n=n+1
    for x in graph:
        x.append(0)
    temp=[]
    for i in range(n):
        temp.append(0)
    graph.append(temp)
def show():
    for i in range(n):         
        for j in range(n):
            print(graph[i][j],end=" ")
        print()
def addEdge(node1,node2,weight):
    if node1 not in nodes:
        print(node1,"is not available in graph")
    elif node2 not in nodes:
        print(node2,"is not available in graph")
    else:
        i=nodes.index(node1)
        j=nodes.index(node2)
        graph[i][j]=weight
        graph[j][i]=weight
nodes=[]
graph=[]
n=0
while True:
    print()
    print("1.Add node\n2.Add edge\n3.Print graph\n4.Exit")
    ch=int(input("Enter node"))
    if ch==1:
        v=input("Enter node")
        addNode(v)
    elif ch==2:
        node1=input("Enter node1")
        node2=input("Enter node2")
        weight=int(input("Enter weight"))
        addEdge(node1,node2,weight)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("Invalid choice")     